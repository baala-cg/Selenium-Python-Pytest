{"name": "test_logout", "status": "broken", "statusDetails": {"message": "AttributeError: module 'moment' has no attribute 'now'", "trace": "self = <login_test.TestLogin object at 0x000001B737E83A50>\n\n    def test_logout(self):\n        try:\n            driver = self.driver\n            homepage = HomePage(driver)\n>           homepage.click_welcome()\n\ntests\\login_test.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\homePage.py:13: in click_welcome\n    self.driver.find_element(By.ID, self.welcome_link_id).click()\n..\\venv2\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\venv2\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B735755A50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6A90168F4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFFA08F257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFFA1DEAA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"welcome\"]\"}\nE         (Session info: chrome=122.0.6261.70); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6A90AAD22+56930]\nE       \t(No symbol) [0x00007FF6A901F622]\nE       \t(No symbol) [0x00007FF6A8ED42E5]\nE       \t(No symbol) [0x00007FF6A8F198ED]\nE       \t(No symbol) [0x00007FF6A8F19A2C]\nE       \t(No symbol) [0x00007FF6A8F5A967]\nE       \t(No symbol) [0x00007FF6A8F3BCDF]\nE       \t(No symbol) [0x00007FF6A8F581E2]\nE       \t(No symbol) [0x00007FF6A8F3BA43]\nE       \t(No symbol) [0x00007FF6A8F0D438]\nE       \t(No symbol) [0x00007FF6A8F0E4D1]\nE       \tGetHandleVerifier [0x00007FF6A9426AAD+3709933]\nE       \tGetHandleVerifier [0x00007FF6A947FFED+4075821]\nE       \tGetHandleVerifier [0x00007FF6A947817F+4043455]\nE       \tGetHandleVerifier [0x00007FF6A9149756+706710]\nE       \t(No symbol) [0x00007FF6A902B8FF]\nE       \t(No symbol) [0x00007FF6A9026AE4]\nE       \t(No symbol) [0x00007FF6A9026C3C]\nE       \t(No symbol) [0x00007FF6A90168F4]\nE       \tBaseThreadInitThunk [0x00007FFFA08F257D+29]\nE       \tRtlUserThreadStart [0x00007FFFA1DEAA58+40]\n\n..\\venv2\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <login_test.TestLogin object at 0x000001B737E83A50>\n\n    def test_logout(self):\n        try:\n            driver = self.driver\n            homepage = HomePage(driver)\n            homepage.click_welcome()\n            homepage.click_logout()\n            x = driver.title\n            assert x == \"OrangeHRM\"\n    \n        except AssertionError as error:\n            print(\"Assertion error occurred\")\n            print(error)\n            currTime = moment.now().strftime(\"%d-%m-%Y_%H-%M-%S\")\n            testName = utils.whoami()\n            screenshotName = testName+\"_\"+currTime\n            allure.attach(self.driver.get_screenshot_as_png(),name=screenshotName,\n                          attachment_type=allure.attachment_type.PNG)\n    \n            driver.get_screenshot_as_file(\"C:/Users/Administrator/PycharmProjects/AutomationFramework_1/screenshots/\" + screenshotName + \".png\")\n            raise\n    \n        except:\n            print(\"There was an exception\")\n    \n>           currTime = moment.now().strftime(\"%d-%m-%Y_%H-%M-%S\")\nE           AttributeError: module 'moment' has no attribute 'now'\n\ntests\\login_test.py:45: AttributeError"}, "attachments": [{"name": "stdout", "source": "f3b2e5a2-5720-42b1-b396-8c002066b0bd-attachment.txt", "type": "text/plain"}], "start": 1709347334232, "stop": 1709347340508, "uuid": "7a3ca9bf-4df9-47fc-9778-ab7fa77faef9", "historyId": "e89a5a0e9aefe451ee262eba82370b01", "testCaseId": "e89a5a0e9aefe451ee262eba82370b01", "fullName": "tests.login_test.TestLogin#test_logout", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('test_setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "login_test"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Balu-Lappy"}, {"name": "thread", "value": "3800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.login_test"}]}